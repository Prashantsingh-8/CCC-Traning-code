Q-14) Some prime numbers can be expressed as Sum of other consecutive prime numbers.
For example
5 = 2 + 3
17 = 2 + 3 + 5 + 7
41 = 2 + 3 + 5 + 7 + 11 + 13
Your task is to find out how many prime numbers which satisfy this property are present in the range 3 to N subject to a constraint that summation should always start with number 2.
Write code to find out number of prime numbers that satisfy the above mentioned property in a given range.
Input Format:
Each test case contains a number N <= 1000000000
Output Format:
Print the total number of all such prime numbers which are less than or equal to N.

Code:
#include <stdio.h> 
#include <math.h> 
int isprime(unsigned long long p) {
 unsigned long long int i;
 if (p <= 1) 
return 0; 
if (p <= 3) 
return 1;
 if (p%2 == 0 || p%3 == 0) 
return 0;
long int l=sqrt(p); 
for ( i=5; i<=l;i=i+6)
 if (p%i == 0 || p%(i+2)==0) 
return 0;
 return 1;
 }
 int main() { 
/* Enter your code here. Read input from STDIN. Print output to STDOUT */
 long int n,sum=2,c=0;
 scanf("%d",&n);
 int a[100000],i=1,j;
 a[0]=2;
 for(j=3;i<100000;j=j+2){
 if(isprime(j))
 a[i++]=j;
 } 
for(i=1;sum<n;i++) { 
sum=sum+a[i];
 if(sum<=n &&isprime(sum))
 c++; 
}
 printf("%d",c);
 return 0;
 }
